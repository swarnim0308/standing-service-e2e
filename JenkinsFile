pipeline {
    agent any

    options {
        skipDefaultCheckout(true)
    }

    environment {
        BACKEND_IMAGE = 'standing-service-backend'
        FRONTEND_IMAGE = 'standing-service-frontend'
        DOCKER_TAG = 'latest'
    }

    tools {
        maven 'Maven 3'
        jdk 'JDK 17'
    }

    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'main', description: 'Git branch to checkout')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${params.BRANCH_NAME}", url: 'https://github.com/swarnim0308/standing-service-e2e.git'
            }
        }

stage('Build Backend') {
    steps {
        dir('backend') {
            bat 'mvn clean package -DskipTests'
            script {
                docker.build("${BACKEND_IMAGE}:${DOCKER_TAG}", '-f Dockerfile.backend .')
            }
        }
    }
}


        stage('Build Frontend') {
            steps {
                dir('team-standing-frontend') {
                    sh 'npm install'
                    sh 'npm run build'
                    script {
                        docker.build("${FRONTEND_IMAGE}:${DOCKER_TAG}", '-f Dockerfile.frontend .')
                    }
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                // Use docker-compose to start both containers together
                bat 'docker-compose down || exit 0'  // stop any running containers first
                bat 'docker-compose up -d --build'  // build images and start containers
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
        }
        success {
            echo 'Build and deployment successful!'
        }
        failure {
            echo 'Build or deployment failed.'
        }
    }
}
